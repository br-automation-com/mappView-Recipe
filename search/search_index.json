{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Introduction This is a sample project for a recipe management with mappView. It uses B&R mappRecipe to access the recipe data and supports up to 3 concurrent web clients as well as Unicode recipe names. Unicode names are required for language that require special fonts (Chinese, Japanese, Russian, ..). Also see How to import the user management into an existing project. Download the latest release from here. When upgrading from a previous version make sure to delete the files that were imported before. Detailed information are available in the Wiki . This sample can run in simualtion mode (http://127.0.0.1:81/). Requirements Automation Studio 4.9 mappView 5.15 mappServices 5.15 Automation Runtime C4.90 Recommended task class is #8 with a 10ms cycle time.","title":"Start"},{"location":"index.html#introduction","text":"This is a sample project for a recipe management with mappView. It uses B&R mappRecipe to access the recipe data and supports up to 3 concurrent web clients as well as Unicode recipe names. Unicode names are required for language that require special fonts (Chinese, Japanese, Russian, ..). Also see How to import the user management into an existing project. Download the latest release from here. When upgrading from a previous version make sure to delete the files that were imported before. Detailed information are available in the Wiki . This sample can run in simualtion mode (http://127.0.0.1:81/).","title":"Introduction"},{"location":"index.html#requirements","text":"Automation Studio 4.9 mappView 5.15 mappServices 5.15 Automation Runtime C4.90 Recommended task class is #8 with a 10ms cycle time.","title":"Requirements"},{"location":"description.html","text":"The sample consists of two main components. The sample page is used to operate the recipe management. The task Recipe_01 drives the recipe management. Ideally this task should not be changed to make future updates easier. All additional code should be added to 'YourTask'. The following functions are currently supported. Load and Save recipes View recipes Create new recipes Delete recipes Rename recipes Download and upload recipes Recipes can be downloaded directly from the web client. To support this function the recipes must be loaded into memory. A buffer of the size REC_UPLOAD_DOWNLOAD_SIZE is used to hold the data into the memory. If the recipes exceed REC_UPLOAD_DOWNLOAD_SIZE the constant must be increased. Recipe upload is supported for ASCII recipe mode (REC_USE_UNICODE=false). Up to 3 web clients can connect at the same time. While the task itself can only execute one command at a time the commands are executed so fast that this should not be an issue. The init command may take longer but the response data is distributed to all sessions. Command structure The task uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure Recipe_01 looks as follows: Level 1 Level 2 Level Description CMD Used to trigger commands like load, save, delete, ... A command is triggered by setting it to true, when the command is finished the task will reset the command. This indicates that the command is finished. Do not change any parameters or set another command until the previous command is finished. Init Initializes the recipe management and reads the names of all recipes. New Create a new recipe, triggers an error message if the recipe name already exists. Load Loads the recipe data. Save Saves the recipe data. View View selected recipe. Rename Renames the selected recipe. Delete Deletes the selected recipe. Download Download selected recipe. Upload Upload a recipe via web browser to the taret. ErrorReset Resets pending errors. PAR Parameters like recipe name, file path, ... RecipeName The name of the recipe used with the current command. RecipeNameNew New name used with the command rename. RecipeID File name of the recipe. With standard strings this equal the recipe name. Increasing numbers are used for Unicode recipe names. The recipe name is then stored as Unicode inside the recipe itself. Initialized Shows that the recipe management was initialized correct. VisuSlotID This is the session ID for the current command. This is used to identify where to send response messages. VisuEnableCommand Enable or disable commands when number of recipes is 0 or command is running. DAT Recipe lists as well as status information. RecipeNames List with all recipe names. RecipeIDs File names for the corresponding recipe name. RecipeNum Number of recipes in the list. VIS Data specific for the visualization. The structure is an array, one for each client session. RecipeNames List with all recipes formatted as data provider for the mappView listbox. RecipeNum Number of visible recipes in the list. Depending on the filter this number can be lower than the total number of recipes stored under DAT. RecipeFilter Only show recipes that contain this string pattern. RecipeSelect Used to select the recipe name after command new or rename. DownloadFileUrl Url containing the file name that is downloaded. UploadOverwriteRequest Show message box to overwrite file. UploadOverwriteResponse Response from message box overwrite file. ReloadUpload Reload upload button. RecipeDoubleClick Helper variable to detect a double click on a record. When a double click is detected, the recipe is opened. ViewFilePath File path used for the web widget that shows the file content. ViewFile Trigger to open the fly out window and view the file content. ShowMessageBoxError Show a message box when command was not successful. ERR Information about errors. State State where the error occurred. Text Error text. StatusText Shows the result for the last command. StatusNo Shows the status as number Pre-Configuration The task communicates with the outside world via the global structure 'Recipe_01'. If more than one recipe management is needed the complete package 'mappRecipe' should be duplicated. It is important that the new task name and new global structure use the same name. After importing the sample go to the package 'mappRecipe' and edit the file 'RecVariables.var'. The variable array 'REC_VAR_LIST' contains the name of the variables that contain the recipe data. The default variable has a few sample values. After importing the task these can be replaced with \"real\" variables that should be saved. The variables can be standard type but also arrays or structures. The following constants can be adjusted if necessary. Constant Default Text REC_USE_UNICODE TRUE When set the to false the recipe name equals the file name. Use this setting for better performance when no special characters are needed. When set to true an increasing number is used for the file name instead. The recipe name is then stored as Unicode inside the recipe itself. Execute a clean configuration and rebuilt the project after changing this value. When set to to TRUE recipe upload is not supported. REC_SORT_NUMERIC FALSE Sort recipe names as numeric values instead of alphabetic. REC_RECIPE_TYPE typeCSV Select typeCSV for recipes in CSV file format or select typeXML for XML format. Execute a clean configuration and rebuilt the project after changing this value. REC_MPLINK gRecipeCsv_01 mappRecipe link name from configuration view. Use gRecipeCsv_01 for CSV and gRecipeXml_01 for XML in this demo. REC_DEVICE RECIPE_DEVICE Device name for the recipe data defined under File Devices in the CPU configuration. REC_DIRECTORY Recipe_01 Directory where the recipes are stored. REC_THIS_TASK Recipe_01 Name of this task and the global variable's structure. REC_REC_NUM 100 Maximum number of recipes. REC_VAR_NUM 10 Maximum number of variables that can be registered. REC_NAME_LENGTH 40 Maximum length for a recipe name. REC_UPLOAD_DOWNLOAD_SIZE 100000 Maximum size of files that can be uploaded or downloaded REC_VIS_LENGTH 120 Make this REC_NAME_LENGTH x 3. REC_MAX_CLIENTS_ID 2 Maximum number of concurrent web client connections. Do not change this number. REC_VIEW_FILTER csv, xml File extensions that can be used with the view command. The filter is case sensitive. REC_VAR_LIST List of variables to be included in a recipe. Performance When calling the init command the task needs some time to generate the list of recipe names. On a X20CP1583 running the task in a 10ms task class the init command needs about 20ms per recipe plus 150ms. So for 100 recipes the task needs 2.15 seconds to read all recipe names when using standard strings. When using Unicode strings the task needs 70ms per recipe name plus 200ms. So for 100 recipes the task needs 7.20 seconds to read all recipe names when using Unicode strings. Error handling The task generates the following list of error messages. All other error numbers are generated from included libraries that can be found in the Automation Studio help. No Constant Text 50010 ERR_REC_TOO_MANY_CLIENTS More than 3 clients try to connect to user management 50100 ERR_REC_NAME_EMPTY Recipe name is empty 50101 ERR_REC_NAME_EXISTS Recipe name already exists 50102 ERR_REC_NAME_LOST Recipe name was not found 50103 ERR_REC_NAME_LENGTH One or more recipe names exceeds maximum length 50110 ERR_REC_DEV_NAME_EMPTY Device name is empty 50120 ERR_REC_VAR_NAME_EMPTY Variable name is empty 50130 ERR_REC_NOT_INITIALIZED Recipe management is not initialized 50140 ERR_REC_MAX_NUM Maximum number of recipes reached 50150 ERR_REC_TASK_NAME Task name is incorrect. Make sure task name and global variable structure share the same name and that the string \"this\" is correct in the init task. 50300 ERR_MEM_ALLOC Memory allocation for file upload and download failed 50310 ERR_MEM_DOWNLOAD Size of download file exceeds maximum 50320 ERR_TIMEOUT_DOWNLOAD Download response timed out 50330 ERR_DIR_DOWNLOAD Directories cannot be downloaded 50400 ERR_SIZE_NAME_UPLOAD Cannot find filename in upload response 50401 ERR_POS_NAME_UPLOAD Cannot determine end of filename in upload response 50402 ERR_LEN_NAME_UPLOAD Filename is too long in upload response 50403 ERR_POS_DATA_UPLOAD Cannot find data in upload response 50404 ERR_SIZE_DATA_UPLOAD Cannot determine end of data in upload response 50410 ERR_MEM_UPLOAD Size of upload file exceeds maximum size 50420 ERR_UNICODE_UPLOAD Upload is not supported when Unicode is used Limitations Viewing a recipe only works for CSV files. Downloading and uploading currently does not work for Unicode recipes.","title":"Description"},{"location":"description.html#command-structure","text":"The task uses a variable structure to communicate with the outside world that can also be used to interact with other tasks. The structure Recipe_01 looks as follows: Level 1 Level 2 Level Description CMD Used to trigger commands like load, save, delete, ... A command is triggered by setting it to true, when the command is finished the task will reset the command. This indicates that the command is finished. Do not change any parameters or set another command until the previous command is finished. Init Initializes the recipe management and reads the names of all recipes. New Create a new recipe, triggers an error message if the recipe name already exists. Load Loads the recipe data. Save Saves the recipe data. View View selected recipe. Rename Renames the selected recipe. Delete Deletes the selected recipe. Download Download selected recipe. Upload Upload a recipe via web browser to the taret. ErrorReset Resets pending errors. PAR Parameters like recipe name, file path, ... RecipeName The name of the recipe used with the current command. RecipeNameNew New name used with the command rename. RecipeID File name of the recipe. With standard strings this equal the recipe name. Increasing numbers are used for Unicode recipe names. The recipe name is then stored as Unicode inside the recipe itself. Initialized Shows that the recipe management was initialized correct. VisuSlotID This is the session ID for the current command. This is used to identify where to send response messages. VisuEnableCommand Enable or disable commands when number of recipes is 0 or command is running. DAT Recipe lists as well as status information. RecipeNames List with all recipe names. RecipeIDs File names for the corresponding recipe name. RecipeNum Number of recipes in the list. VIS Data specific for the visualization. The structure is an array, one for each client session. RecipeNames List with all recipes formatted as data provider for the mappView listbox. RecipeNum Number of visible recipes in the list. Depending on the filter this number can be lower than the total number of recipes stored under DAT. RecipeFilter Only show recipes that contain this string pattern. RecipeSelect Used to select the recipe name after command new or rename. DownloadFileUrl Url containing the file name that is downloaded. UploadOverwriteRequest Show message box to overwrite file. UploadOverwriteResponse Response from message box overwrite file. ReloadUpload Reload upload button. RecipeDoubleClick Helper variable to detect a double click on a record. When a double click is detected, the recipe is opened. ViewFilePath File path used for the web widget that shows the file content. ViewFile Trigger to open the fly out window and view the file content. ShowMessageBoxError Show a message box when command was not successful. ERR Information about errors. State State where the error occurred. Text Error text. StatusText Shows the result for the last command. StatusNo Shows the status as number","title":"Command structure"},{"location":"description.html#pre-configuration","text":"The task communicates with the outside world via the global structure 'Recipe_01'. If more than one recipe management is needed the complete package 'mappRecipe' should be duplicated. It is important that the new task name and new global structure use the same name. After importing the sample go to the package 'mappRecipe' and edit the file 'RecVariables.var'. The variable array 'REC_VAR_LIST' contains the name of the variables that contain the recipe data. The default variable has a few sample values. After importing the task these can be replaced with \"real\" variables that should be saved. The variables can be standard type but also arrays or structures. The following constants can be adjusted if necessary. Constant Default Text REC_USE_UNICODE TRUE When set the to false the recipe name equals the file name. Use this setting for better performance when no special characters are needed. When set to true an increasing number is used for the file name instead. The recipe name is then stored as Unicode inside the recipe itself. Execute a clean configuration and rebuilt the project after changing this value. When set to to TRUE recipe upload is not supported. REC_SORT_NUMERIC FALSE Sort recipe names as numeric values instead of alphabetic. REC_RECIPE_TYPE typeCSV Select typeCSV for recipes in CSV file format or select typeXML for XML format. Execute a clean configuration and rebuilt the project after changing this value. REC_MPLINK gRecipeCsv_01 mappRecipe link name from configuration view. Use gRecipeCsv_01 for CSV and gRecipeXml_01 for XML in this demo. REC_DEVICE RECIPE_DEVICE Device name for the recipe data defined under File Devices in the CPU configuration. REC_DIRECTORY Recipe_01 Directory where the recipes are stored. REC_THIS_TASK Recipe_01 Name of this task and the global variable's structure. REC_REC_NUM 100 Maximum number of recipes. REC_VAR_NUM 10 Maximum number of variables that can be registered. REC_NAME_LENGTH 40 Maximum length for a recipe name. REC_UPLOAD_DOWNLOAD_SIZE 100000 Maximum size of files that can be uploaded or downloaded REC_VIS_LENGTH 120 Make this REC_NAME_LENGTH x 3. REC_MAX_CLIENTS_ID 2 Maximum number of concurrent web client connections. Do not change this number. REC_VIEW_FILTER csv, xml File extensions that can be used with the view command. The filter is case sensitive. REC_VAR_LIST List of variables to be included in a recipe.","title":"Pre-Configuration"},{"location":"description.html#performance","text":"When calling the init command the task needs some time to generate the list of recipe names. On a X20CP1583 running the task in a 10ms task class the init command needs about 20ms per recipe plus 150ms. So for 100 recipes the task needs 2.15 seconds to read all recipe names when using standard strings. When using Unicode strings the task needs 70ms per recipe name plus 200ms. So for 100 recipes the task needs 7.20 seconds to read all recipe names when using Unicode strings.","title":"Performance"},{"location":"description.html#error-handling","text":"The task generates the following list of error messages. All other error numbers are generated from included libraries that can be found in the Automation Studio help. No Constant Text 50010 ERR_REC_TOO_MANY_CLIENTS More than 3 clients try to connect to user management 50100 ERR_REC_NAME_EMPTY Recipe name is empty 50101 ERR_REC_NAME_EXISTS Recipe name already exists 50102 ERR_REC_NAME_LOST Recipe name was not found 50103 ERR_REC_NAME_LENGTH One or more recipe names exceeds maximum length 50110 ERR_REC_DEV_NAME_EMPTY Device name is empty 50120 ERR_REC_VAR_NAME_EMPTY Variable name is empty 50130 ERR_REC_NOT_INITIALIZED Recipe management is not initialized 50140 ERR_REC_MAX_NUM Maximum number of recipes reached 50150 ERR_REC_TASK_NAME Task name is incorrect. Make sure task name and global variable structure share the same name and that the string \"this\" is correct in the init task. 50300 ERR_MEM_ALLOC Memory allocation for file upload and download failed 50310 ERR_MEM_DOWNLOAD Size of download file exceeds maximum 50320 ERR_TIMEOUT_DOWNLOAD Download response timed out 50330 ERR_DIR_DOWNLOAD Directories cannot be downloaded 50400 ERR_SIZE_NAME_UPLOAD Cannot find filename in upload response 50401 ERR_POS_NAME_UPLOAD Cannot determine end of filename in upload response 50402 ERR_LEN_NAME_UPLOAD Filename is too long in upload response 50403 ERR_POS_DATA_UPLOAD Cannot find data in upload response 50404 ERR_SIZE_DATA_UPLOAD Cannot determine end of data in upload response 50410 ERR_MEM_UPLOAD Size of upload file exceeds maximum size 50420 ERR_UNICODE_UPLOAD Upload is not supported when Unicode is used","title":"Error handling"},{"location":"description.html#limitations","text":"Viewing a recipe only works for CSV files. Downloading and uploading currently does not work for Unicode recipes.","title":"Limitations"},{"location":"import.html","text":"This guide shows how to import the demo project into an existing project. The screenshots can look slightly different depending on the version used. Copy source code Open the demo project and the exiting project side by side. Go to the logical view in both projects. Copy the package \u201cmappRecipe\u201d from the demo project Paste the task into the existing project at the top Assign the new task to the CPU Make sure that the B&R libraries AsHttp, AsMem, FileIO, ArBrStr, ArBrWStr, AsIODiag, MpCom, MpBase and sys_lib are in the existing project, add the libraries if necessary. Copy mappView pages Open the mappView tree in the demo project and navigate to RecipePage, right click and copy it In the existing project paste the page onto pages Assign the new task to the CPU Assign pages Expand the new page and double click on RecipePage.page Select the default layout for the existing project from the properties window Assign layout Once the default layout is set in the existing project, click on each section and make sure that the correct content is selected Select contentRecipe for the main section Save the project Assign navigation If the existing project uses a navigation bar, add a new button that points to the new recipe page Assign the recipe page to the new navigation button Configure OPC UA configuration Switch to the configuration view in the existing project and open the OPC UA configuration Select the global variable \u201cRecipe_01\u201d and \u201cRecipeData\u201d , If the variables does not show up, save and compile the project, then reopen the window Enable the variables with the green checkmark Set \u201cAutomatic Enable\u201d to true in the properties window Configure OPC UA configuration Select the variable Recipe_01.VIS Set \u201cShow array elements\u201d to true, make sure that VIS has write access for everyone Copy mappView binding files Expand the section mappView in the existing project and select all files ending with \u201cbinding\u201d and \u201ceventbinding\u201d Right click and copy the files Paste the files in the existing project under mappView Add binding files to vis In the existing project open the file \u201cVisualizat.vis\u201d Add the RecipePage in the \u201cPages\u201d section Add the Recipe_binding in the \u201cBindingsSets\u201d section Add the Recipe_eventbinding in the \u201cEventBindingsSets\u201c section Add mappRecipe configuration Select the mappServices folder in the configuration view, if it does not exist, add the folder from the toolbox Select \u201cMpRecipeCsv Default\u201d from the toolbox Open the configuration and adjust the settings if needed Rename the MpLink to \u201cgRecipeCsv_01\u201d for CSV Adjust PLC configuration Switch to the physical view and open the CPU configuration Make sure \u201cMinimum user partition size\u201d is larger than 0. Define a file device \u201cRECIPE_DEVICE\u201d and point it to the user partition \u201cF:/\u201d Define a file device \u201cSIM_DEVICE\u201d and point it to the user partition \u201cC:/Temp\u201d or \u201cC:/\u201d for simulation mode. Adjust variable configuration To change the recipe data from the sample values to the \u201creal\u201d data open the RecVariables.var file in the mappRecipe package Edit the default values for the variable array REC_VAR_LIST. Replace the sample variables with the \u201creal\u201d data. For local variables add the task name followed by \u201c:\u201d","title":"Import"},{"location":"import.html#copy-source-code","text":"Open the demo project and the exiting project side by side. Go to the logical view in both projects. Copy the package \u201cmappRecipe\u201d from the demo project Paste the task into the existing project at the top Assign the new task to the CPU Make sure that the B&R libraries AsHttp, AsMem, FileIO, ArBrStr, ArBrWStr, AsIODiag, MpCom, MpBase and sys_lib are in the existing project, add the libraries if necessary.","title":"Copy source code"},{"location":"import.html#copy-mappview-pages","text":"Open the mappView tree in the demo project and navigate to RecipePage, right click and copy it In the existing project paste the page onto pages Assign the new task to the CPU","title":"Copy mappView pages"},{"location":"import.html#assign-pages","text":"Expand the new page and double click on RecipePage.page Select the default layout for the existing project from the properties window","title":"Assign pages"},{"location":"import.html#assign-layout","text":"Once the default layout is set in the existing project, click on each section and make sure that the correct content is selected Select contentRecipe for the main section Save the project","title":"Assign layout"},{"location":"import.html#assign-navigation","text":"If the existing project uses a navigation bar, add a new button that points to the new recipe page Assign the recipe page to the new navigation button","title":"Assign navigation"},{"location":"import.html#configure-opc-ua-configuration","text":"Switch to the configuration view in the existing project and open the OPC UA configuration Select the global variable \u201cRecipe_01\u201d and \u201cRecipeData\u201d , If the variables does not show up, save and compile the project, then reopen the window Enable the variables with the green checkmark Set \u201cAutomatic Enable\u201d to true in the properties window","title":"Configure OPC UA configuration"},{"location":"import.html#configure-opc-ua-configuration_1","text":"Select the variable Recipe_01.VIS Set \u201cShow array elements\u201d to true, make sure that VIS has write access for everyone","title":"Configure OPC UA configuration"},{"location":"import.html#copy-mappview-binding-files","text":"Expand the section mappView in the existing project and select all files ending with \u201cbinding\u201d and \u201ceventbinding\u201d Right click and copy the files Paste the files in the existing project under mappView","title":"Copy mappView binding files"},{"location":"import.html#add-binding-files-to-vis","text":"In the existing project open the file \u201cVisualizat.vis\u201d Add the RecipePage in the \u201cPages\u201d section Add the Recipe_binding in the \u201cBindingsSets\u201d section Add the Recipe_eventbinding in the \u201cEventBindingsSets\u201c section","title":"Add binding files to vis"},{"location":"import.html#add-mapprecipe-configuration","text":"Select the mappServices folder in the configuration view, if it does not exist, add the folder from the toolbox Select \u201cMpRecipeCsv Default\u201d from the toolbox Open the configuration and adjust the settings if needed Rename the MpLink to \u201cgRecipeCsv_01\u201d for CSV","title":"Add mappRecipe configuration"},{"location":"import.html#adjust-plc-configuration","text":"Switch to the physical view and open the CPU configuration Make sure \u201cMinimum user partition size\u201d is larger than 0. Define a file device \u201cRECIPE_DEVICE\u201d and point it to the user partition \u201cF:/\u201d Define a file device \u201cSIM_DEVICE\u201d and point it to the user partition \u201cC:/Temp\u201d or \u201cC:/\u201d for simulation mode.","title":"Adjust PLC configuration"},{"location":"import.html#adjust-variable-configuration","text":"To change the recipe data from the sample values to the \u201creal\u201d data open the RecVariables.var file in the mappRecipe package Edit the default values for the variable array REC_VAR_LIST. Replace the sample variables with the \u201creal\u201d data. For local variables add the task name followed by \u201c:\u201d","title":"Adjust variable configuration"},{"location":"revision.html","text":"Version 1.7 (24.02.2023) Removed obsolete widget for recipe directory Version 1.6 (30.05.2022) Fixed rename command can cause memory violation and crash PLC Version 1.5 (27.01.2022) Add recipe to list after save command when it does not exist Fixed typo in memory allocation status check Version 1.4 (18.10.2021) Version 1.4 (18.10.2021) - Added error message when recipe name is missing from Unicode recipe - Don't reset error when returning to wait state Version 1.3 (03.09.2021) Update project to Automation Studio 4.9 and mapp 5.15 Fixed an issue where the recipe management would not recover correct from an error Version 1.2 (15.04.2021) Fixed PLC crash when REC_VAR_NUM is 1 Version 1.1 (01.04.2021) Fixed upload file name can exceed REC_ITEM_LENGTH Version 1.0 (05.02.2021) Fixed memory violation when file exceeds download buffer size Reset error in wait state Errors in the wait state report the wrong trigger state Version 0.91 Wrong MpLink name now generates an error Moved status text up to main strutcure Moved error no up to main structure and renamed it to StatusNo Better recovering from errors Version 0.8 Changed some parameters to constants Simplified configuration Added better error messages Added the possibility to define multiple variables Version 0.7 Fixed recipe view does not show correct data on double click or command view Fixed ReplaceString function call Version 0.6 Option to sort recipe names as numeric values instead of alphabetic Code cleanup Renamed web controls to avoid conflicts with other samples Fixed download not working when downloading the same file again Fixed upload not working with large files > 1 MB Version 0.5 Added support for recipe upload over mappView Fixed renaming recipes in ASCII mode Version 0.4 Added support for recipe download over mappView Removed view file status message Code cleanup Version 0.3 Added categories to mapp function blocks to separate recipe data Added function to view files by double click or command Removed obsolete constants Version 0.2 Added message box before saving or deleting a recipe Fixed filter compare too short Added exit function Code cleanup Version 0.1 First public release","title":"Revision"},{"location":"revision.html#version-17-24022023","text":"Removed obsolete widget for recipe directory","title":"Version 1.7 (24.02.2023)"},{"location":"revision.html#version-16-30052022","text":"Fixed rename command can cause memory violation and crash PLC","title":"Version 1.6 (30.05.2022)"},{"location":"revision.html#version-15-27012022","text":"Add recipe to list after save command when it does not exist Fixed typo in memory allocation status check","title":"Version 1.5 (27.01.2022)"},{"location":"revision.html#version-14-18102021","text":"Version 1.4 (18.10.2021) - Added error message when recipe name is missing from Unicode recipe - Don't reset error when returning to wait state","title":"Version 1.4 (18.10.2021)"},{"location":"revision.html#version-13-03092021","text":"Update project to Automation Studio 4.9 and mapp 5.15 Fixed an issue where the recipe management would not recover correct from an error","title":"Version 1.3 (03.09.2021)"},{"location":"revision.html#version-12-15042021","text":"Fixed PLC crash when REC_VAR_NUM is 1","title":"Version 1.2 (15.04.2021)"},{"location":"revision.html#version-11-01042021","text":"Fixed upload file name can exceed REC_ITEM_LENGTH","title":"Version 1.1 (01.04.2021)"},{"location":"revision.html#version-10-05022021","text":"Fixed memory violation when file exceeds download buffer size Reset error in wait state Errors in the wait state report the wrong trigger state","title":"Version 1.0 (05.02.2021)"},{"location":"revision.html#version-091","text":"Wrong MpLink name now generates an error Moved status text up to main strutcure Moved error no up to main structure and renamed it to StatusNo Better recovering from errors","title":"Version 0.91"},{"location":"revision.html#version-08","text":"Changed some parameters to constants Simplified configuration Added better error messages Added the possibility to define multiple variables","title":"Version 0.8"},{"location":"revision.html#version-07","text":"Fixed recipe view does not show correct data on double click or command view Fixed ReplaceString function call","title":"Version 0.7"},{"location":"revision.html#version-06","text":"Option to sort recipe names as numeric values instead of alphabetic Code cleanup Renamed web controls to avoid conflicts with other samples Fixed download not working when downloading the same file again Fixed upload not working with large files > 1 MB","title":"Version 0.6"},{"location":"revision.html#version-05","text":"Added support for recipe upload over mappView Fixed renaming recipes in ASCII mode","title":"Version 0.5"},{"location":"revision.html#version-04","text":"Added support for recipe download over mappView Removed view file status message Code cleanup","title":"Version 0.4"},{"location":"revision.html#version-03","text":"Added categories to mapp function blocks to separate recipe data Added function to view files by double click or command Removed obsolete constants","title":"Version 0.3"},{"location":"revision.html#version-02","text":"Added message box before saving or deleting a recipe Fixed filter compare too short Added exit function Code cleanup","title":"Version 0.2"},{"location":"revision.html#version-01","text":"First public release","title":"Version 0.1"}]}